<?xml version="1.0"?>

<launch>
  <arg name="project" default="robot_navigation" />
  <arg name="global_planner" default="a_star" />

  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="1.0"/>
  <arg name="y_pos" default="3.0"/>
  <arg name="z_pos" default="0.0"/>

  <arg name="yaw" default="-3.14"/>  <!-- Converted from quaternion -->

  <!-- turtlebot
  <include file="$(find aws_robomaker_bookstore_world)/launch/bookstore.launch">
    <arg name="world_name" value="$(find aws_robomaker_bookstore_world)/worlds/bookstore.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include> -->
  <!-- Launch World -->
  <include file="$(find aws_robomaker_bookstore_world)/launch/bookstore.launch"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"
        args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)
              -Y $(arg yaw)
              -param robot_description"/>
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch"/>
  <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/>

  <!-- a star -->
  <node pkg="$(arg project)" type="$(arg global_planner)" name="$(arg global_planner)" output="screen" respawn="true" />
  <!-- dwa -->
  <include file="$(find robot_navigation)/launch/local_planner.launch">
    <arg name="use_scan_as_input" value="true"/>
    <arg name="use_path_cost" default="true"/>
    <arg name="v_path_width" value="0.02"/>
  </include>

  <!-- other nodes -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(find aws_robomaker_bookstore_world)/maps/turtlebot3_waffle_pi/map.yaml"/>
  <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find robot_navigation)/map/turtlebot3_navigation.rviz"/>
</launch>